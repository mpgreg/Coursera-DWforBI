#Coursera - Data Wharehousing for BI Specialization 
#Database Management Fundamentals 
#Week3 – Module 5 - Assignment Answers


#------Part 1. SELECT Statement Problems
#------Problem 1: For event requests, list the event number, event date (eventrequest.dateheld), and count of the event plans.  Only include event requests in the result if the event request has more than one related event plan with a work date in December 2013.

SELECT eventrequest.eventno, dateheld, COUNT(*) AS plancount 
FROM eventrequest INNER JOIN eventplan ON eventrequest.eventno = eventplan.eventno 
WHERE YEAR(workdate) = 2013 AND MONTH(workdate) = 12
GROUP BY eventrequest.eventno 
HAVING COUNT(*) > 1;

#------Part 1. SELECT Statement Problems
#------Problem 2: List the plan number, event number, work date, and activity of event plans meeting the following two conditions: (1) the work date is in December 2013 and (2) the event is held in the “Basketball arena”.  Your query must not use the facility number (“F101”) of the basketball arena in the WHERE clause. Instead, you should use a condition on the FacName column for the value of “Basketball arena”.

SELECT planno, eventplan.eventno, workdate, activity 
FROM eventplan INNER JOIN eventrequest ON eventplan.eventno = eventrequest.eventno 
     INNER JOIN facility ON eventrequest.facno = facility.facno 
WHERE YEAR(workdate) = 2013 AND MONTH(workdate) = 12 
     AND lower(facname) = 'basketball arena';


#------Part 1. SELECT Statement Problems
#------Problem 3: List the event number, event date, status, and estimated cost of events where there is an event plan managed by Mary Manager and the event is held in the basketball arena in the period October 1 to December 31, 2013.  Your query must not use the facility number (“F101”) of the basketball arena or the employee number (“E101”) of “Mary Manager” in the WHERE clause. Thus, the WHERE clause should not have conditions involving the facility number or employee number compared to constant values.

SELECT eventrequest.eventno, dateheld, status, estcost 
FROM eventrequest INNER JOIN 
	eventplan ON eventrequest.eventno = eventplan.eventno INNER JOIN 
	employee ON eventplan.empno = employee.empno INNER JOIN 
	facility ON eventrequest.facno = facility.facno 
WHERE LOWER(empname) = 'mary manager' 
	AND LOWER(facname) = 'basketball arena' 
	AND dateheld BETWEEN '2013-10-01' AND '2013-12-31';

#------Part 1. SELECT Statement Problems
#------Problem 4: List the plan number, line number, resource name, number of resources (eventplanline.number), location name, time start, and time end where the event is held at the basketball arena, the event plan has activity of activity of “Operation”, and the event plan has a work date in the period October 1 to December 31, 2013.  Your query must not use the facility number (“F101”) of the basketball arena in the WHERE clause. Instead, you should use a condition on the FacName column for the value of “Basketball arena”.

SELECT EventPlanLine.planno, EventPlanLine.lineno, ResourceTbl.resname, EventPlanLine.numberfld, Location.locname, EventPlanLine.timestart, EventPlanLine.timeend 
FROM EventPlanLine INNER JOIN 
	ResourceTbl ON EventPlanLine.resno = ResourceTbl.resno INNER JOIN 
	Location ON EventPlanLine.locno = Location.locno INNER JOIN 
	Facility ON Location.facno = Facility.facno INNER JOIN 
	EventPlan ON EventPlanLine.planno = EventPlan.planno 
WHERE LOWER(facname) = 'basketball arena' 
	AND LOWER(activity) = 'operation' 
	AND workdate BETWEEN '2013-10-01' AND '2013-12-31';

#------Part 2. Database Modification Problems
#------Problem 1: Insert a new row into the Facility table with facility name “Swimming Pool”.

SELECT Facility.facno 
FROM Facility 
ORDER BY Facility.facno DESC LIMIT 1;

INSERT INTO Facility (Facility.facno, Facility.facname) 
VALUES ('F104', 'Swimming Pool');

SELECT * FROM Facility;

#------Part 2. Database Modification Problems
#------Problem 2: Insert a new row in the Location table related to the Facility row in modification problem 1. The new row should have “Door” for the location name.

INSERT INTO Location (Location.locno, Location.facno, Location.locname) 
VALUES ('L107', 'F104', 'Door');

SELECT * FROM Location;

#------Part 2. Database Modification Problems
#------Problem 3: Insert a new row in the Location table related to the Facility row in modification problem 1. The new row should have “Locker Room” for the location name.

INSERT INTO Location (Location.locno, Location.facno, Location.locname) 
VALUES ('L108', 'F104', 'Locker Room');

SELECT * FROM Location;

#------Part 2. Database Modification Problems
#------Problem 4: Change the location name of “Door” to “Gate” for the row inserted in modification problem 2.

UPDATE Location SET Location.locname = 'Gate' 
WHERE Location.locno = 'L107';

SELECT * FROM Location;


#------Part 2. Database Modification Problems
#------Problem 5: Delete the row inserted in modification problem 3.

DELETE FROM Location 
WHERE Location.locno = 'L108';

SELECT * FROM Location;



